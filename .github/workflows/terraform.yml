name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.SSH_KEY }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check terraform/digitalocean

      - name: Terraform Init
        id: init
        run: terraform init terraform/digitalocean
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color terraform/digitalocean

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false terraform/digitalocean
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.G_TOKEN }}
          # script: |
          #   const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
          #   #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
          #   #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
          #   #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
          #   <details><summary>Show Plan</summary>
          #   \`\`\`\n
          #   ${process.env.PLAN}
          #   \`\`\`
          #   </details>
          #   *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          #   github.rest.issues.createComment({
          #     issue_number: context.issue.number,
          #     owner: context.repo.owner,
          #     repo: context.repo.repo,
          #     body: output
          #   })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false terraform/digitalocean

      # - name: Terraform destroy
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform destroy -auto-approve terraform/digitalocean
